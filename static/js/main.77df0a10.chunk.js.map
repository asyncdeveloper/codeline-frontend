{"version":3,"sources":["components/Weather.js","App.js","serviceWorker.js","components/Header.js","components/Search.js","index.js"],"names":["API","Weather","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getWeather","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","CITY","api_call","response","wrap","_context","prev","next","fetch","sent","json","setState","isLoaded","data","stop","_x","apply","arguments","state","props","match","params","woeid","weatherDetails","weather","consolidated_weather","lastTemp","length","react_default","createElement","Link","to","title","the_temp","min_temp","max_temp","className","Component","App","push","map","el","components_Weather","key","Boolean","window","location","hostname","Header","handleChange","bind","assertThisInitialized","handleSubmit","event","target","value","preventDefault","history","concat","pathname","slice","role","type","data-toggle","data-target","href","onSubmit","placeholder","onChange","withRouter","APIWEATHER","Search","LOCATION","t0","console","log","getLocation","_ref2","_callee2","_context2","keys","abrupt","_x2","_this2","then","undefined","ReactDOM","render","BrowserRouter","components_Header","Switch","Route","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.77df0a10.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst API = 'https://catchupng.000webhostapp.com/weather.php?command=location&woeid=';\r\n\r\nclass Weather extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            isLoaded: false,\r\n            data: []\r\n        };\r\n    }\r\n\r\n    getWeather = async (CITY) => {\r\n        const api_call = await fetch(API+CITY);\r\n        const response = await api_call.json();\r\n        this.setState({\r\n            isLoaded: true,\r\n            data : response\r\n        });\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.props.data){\r\n            return;\r\n        }\r\n        if(this.props.match.params.woeid){\r\n            this.getWeather(this.props.match.params.woeid);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(this.props.data){\r\n            let weatherDetails = this.props.data;\r\n            let weather = weatherDetails.consolidated_weather;\r\n            let lastTemp = weather[weather.length-1];\r\n            return (\r\n                <ul>\r\n                    <Link to={'/weather/' + weatherDetails.woeid} >{weatherDetails.title}</Link>\r\n                    <p>\r\n                        Temperature : {lastTemp.the_temp} centigrade\r\n                    </p>\r\n                    <p>\r\n                        Min Temperature : {lastTemp.min_temp} centigrade\r\n                    </p>\r\n                    <p>\r\n                        Max Temperature : {lastTemp.max_temp} centigrade\r\n                    </p>\r\n                </ul>\r\n            )\r\n        } else{\r\n            if(this.state.isLoaded){\r\n                let weatherDetails = this.state.data;\r\n                let weather = weatherDetails.consolidated_weather;\r\n                let lastTemp = weather[weather.length-1];\r\n                return (\r\n                    <ul>\r\n                        <b> {weatherDetails.title} </b>\r\n                        <p>\r\n                            Temperature : {lastTemp.the_temp} centigrade\r\n                        </p>\r\n                        <p>\r\n                            Min Temperature : {lastTemp.min_temp} centigrade\r\n                        </p>\r\n                        <p>\r\n                            Max Temperature : {lastTemp.max_temp} centigrade\r\n                        </p>\r\n                    </ul>\r\n                )\r\n            }else {\r\n                return (\r\n                    <div className=\"App\">\r\n                        Loading\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default Weather;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Weather from \"./components/Weather\";\r\n\r\nconst API = 'https://catchupng.000webhostapp.com/weather.php?command=location&woeid=';\r\nconst INSTANBUL_CITYID = '2344116';\r\nconst BERLIN_CITYID = '638242';\r\nconst LONDON_CITYID = '44418';\r\nconst HELSINKI_CITYID = '565346';\r\nconst DUBLIN_CITYID = '560743';\r\nconst VANCOUVER_CITYID = '9807';\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            isLoaded: false,\r\n            data: []\r\n        };\r\n    }\r\n\r\n    getWeather = async (CITY) => {\r\n        const api_call = await fetch(API+CITY);\r\n        const response = await api_call.json();\r\n        this.state.data.push(response);\r\n        if(this.state.data.length === 6){\r\n            this.setState({\r\n                isLoaded: true,\r\n                data : this.state.data\r\n            });\r\n        }else{\r\n            this.setState({\r\n                data : this.state.data\r\n            });\r\n        }\r\n\r\n    };\r\n\r\n    componentDidMount(){\r\n        this.getWeather(INSTANBUL_CITYID);\r\n        this.getWeather(BERLIN_CITYID);\r\n        this.getWeather(LONDON_CITYID);\r\n        this.getWeather(HELSINKI_CITYID);\r\n        this.getWeather(DUBLIN_CITYID);\r\n        this.getWeather(VANCOUVER_CITYID)\r\n    }\r\n\r\n    render() {\r\n        if(this.state.isLoaded){\r\n            return (\r\n                <div className=\"App\">\r\n                    {\r\n                        this.state.data.map(el => (\r\n                            <Weather key={el.woeid} data={el} />\r\n                        ))\r\n                    }\r\n                </div>\r\n            )\r\n        }else {\r\n            return (\r\n                <div className=\"App\">\r\n                    Loading\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. Weather is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            location: ''\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({location: event.target.value});\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        let location = this.state.location;\r\n        this.props.history.push(`/search/${location}`);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.history.location.pathname){\r\n            let pathname = this.props.history.location.pathname;\r\n            this.setState({\r\n                location : pathname.slice(8)\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-default\" role=\"navigation\">\r\n                <div className=\"navbar-header\">\r\n                    <button type=\"button\" className=\"navbar-toggle\" data-toggle=\"collapse\"\r\n                            data-target=\"#bs-example-navbar-collapse-1\">\r\n                        <span className=\"sr-only\">Toggle navigation</span>\r\n                        <span className=\"icon-bar\"></span>\r\n                        <span className=\"icon-bar\"></span>\r\n                        <span className=\"icon-bar\"></span>\r\n                    </button>\r\n                    <a className=\"navbar-brand\" href=\"/\">Weather App</a>\r\n                </div>\r\n\r\n                <form className=\"navbar-form navbar-right\" role=\"search\" onSubmit={this.handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Location\" onChange={this.handleChange} value={this.state.location}  />\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-default\">Search</button>\r\n                </form>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Header);\r\n\r\n","import React, { Component } from 'react';\r\nimport Weather from \"./Weather\";\r\n\r\nconst API = 'https://catchupng.000webhostapp.com/weather.php?command=search&keyword=';\r\nconst APIWEATHER = 'https://catchupng.000webhostapp.com/weather.php?command=location&woeid=';\r\n\r\nclass Search extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            isLoaded: false,\r\n        };\r\n    }\r\n\r\n    getWeather = async (LOCATION) => {\r\n        try {\r\n            const api_call = await fetch(APIWEATHER+LOCATION);\r\n            const response = await api_call.json();\r\n            this.setState({\r\n                isLoaded: true,\r\n                data : [response]\r\n            });\r\n        } catch (err) {\r\n            console.log('failed');\r\n        }\r\n    };\r\n\r\n    getLocation = async (LOCATION) => {\r\n        try {\r\n            const api_call = await fetch(API+LOCATION);\r\n            const response = await api_call.json();\r\n            if(Object.keys(response).length > 0){\r\n                return response[0].woeid;\r\n            }\r\n        } catch (err) {\r\n            console.log('failed', err);\r\n        }\r\n    };\r\n\r\n    componentDidMount(){\r\n        this.getLocation(this.props.match.params.location).then(woeid => {\r\n            if(woeid === undefined){\r\n                this.setState({\r\n                    isLoaded: true,\r\n                });\r\n            }else{\r\n                this.getWeather(woeid);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if(this.state.isLoaded){\r\n            if(this.state.data){\r\n                return (\r\n                    <div className=\"App\">\r\n                        {\r\n                            this.state.data.map(el => (\r\n                                <Weather key={el.woeid} data={el} />\r\n                            ))\r\n                        }\r\n                    </div>\r\n                )\r\n            }else {\r\n                return (\r\n                    <div className=\"text-center\">\r\n                        Could not find report for location\r\n                    </div>\r\n                )\r\n            }\r\n        }else {\r\n            return (\r\n                <div className=\"App\">\r\n                    Loading\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Search;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from \"./App\";\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\r\nimport Weather from \"./components/Weather\";\r\nimport Header from \"./components/Header\";\r\nimport Search from \"./components/Search\";\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <div>\r\n            <Header />\r\n            <Switch>\r\n                <Route exact={true} path=\"/\" component={App} />\r\n                <Route exact={true} path=\"/weather/:woeid\" component={Weather} />\r\n                <Route exact={true} path=\"/search/:location\" component={Search} />\r\n            </Switch>\r\n        </div>\r\n    </BrowserRouter>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}